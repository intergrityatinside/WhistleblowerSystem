@page "/confirmation"
@inject NavigationManager NavigationManager
@inject WhistleblowerService WhistleblowerService
@inject IFormService FormService
@implements IDisposable
@using WhistleblowerSystem.Shared.DTOs;
@using WhistleblowerSystem.Client.Services;
@using Microsoft.Extensions.Localization;

<div class="content-container">
    <div class="content">
        <h1 class="page-title">
            @L["confirmation_title"]
        </h1>
        <p>
            @L["confirmation_subtitle"]
            <br />
        </p>
        <p>
            @L["confirmation_caseid"] <span style="color:red;font-weight:bold;"> @_form?.Id</span>
            <br />
        </p>
        <p>
            <!-- TODO bind value to password which comes from the backend --> 
            @L["confirmation_password"] <span style="color:red;font-weight:bold;"></span>
            <br/>
        </p>
        <div>
            <br />
            <MudAlert Severity="Severity.Error"  Variant="Variant.Filled">@L["confirmation_text"]</MudAlert>
        </div>

    </div>
    <div class="footer">
        <div>
            <MudButton OnClick="Close" Color="Color.Dark" Variant="Variant.Filled">@L["confirmation_continue"]</MudButton>
        </div>
    </div>
</div>

@code {
    [Inject] IStringLocalizer<App> L { get; set; } = null!;
    private FormDto? _form;
    private WhistleblowerDto _whistleblower = new WhistleblowerDto("", "", "");


    protected override void OnInitialized()
    {
        _form = FormService.GetCurrentForm();
        NavigationManager.LocationChanged += CheckResetForm;

    }

    private void CheckResetForm(object? sender, LocationChangedEventArgs e)
    {
        string relativePath = e.Location.Replace(NavigationManager.BaseUri, "");
        FormService.SetCurrentForm(null);
        _form = null;
        StateHasChanged();
    }

    private async Task Close()
    {
        FormService.SetCurrentForm(null);
        _whistleblower.Id = _form?.Id;
        await WhistleblowerService.Save(_whistleblower);
        NavigationManager.NavigateTo("/home");
    }

    public void Dispose()
    {
        NavigationManager.LocationChanged -= CheckResetForm;
    }

}

