@page "/newreport"
@inject IStringLocalizer<App> L
@using WhistleblowerSystem.Shared.DTOs;
@using WhistleblowerSystem.Shared.Enums;
@using WhistleblowerSystem.Client.Utils;
@using Microsoft.Extensions.Localization;



<div class="content-container">
    <div class="content">
        <h1>@L["newreport_title"]</h1>

        @if (_formFields != null)
        {
            <MudForm Model="@_form" @ref="@_mudForm">
                @foreach (FormFieldDto formField in _formFields)
                {
                    if (formField.SelectionValues != null)
                    {
                        formField.SelectedValues!.Add(string.Empty);
                        <div class="form-group control">
                            <div style="display: flex; flex-direction: row">
                                @if (formField.Mandatory)
                                {
                                    <MudText Color="Color.Error">
                                        <sup>
                                            <strong>*</strong>
                                        </sup>
                                    </MudText>
                                }
                                @formField.Texts.GetLng().Text
                            </div>

                            @switch (formField.Type)
                            {
                                case (ControlType.Dropdown):
                                    <MudSelect @bind-Value="formField.SelectedValues[0]" T="string"
                                               Placeholder=@L["newreport_placeholder_select"] Strict="true" Variant="Variant.Outlined" Format="F2" Required="@formField.Mandatory" RequiredError="@L["newreport_required_error"]">
                                        @foreach (SelectionValueDto selectionValue in formField.SelectionValues)
                                        {
                                            var lng = selectionValue.Text.GetLng();
                                            <MudSelectItem T="string" Value="lng.Value">@lng.Text</MudSelectItem>
                                        }
                                    </MudSelect>
                                    break;
                                case (ControlType.Radiobutton):
                                    <MudRadioGroup @bind-SelectedOption="@formField.SelectedValues[0]" Required="@formField.Mandatory" RequiredError="@L["newreport_required_error"]">
                                        @foreach (SelectionValueDto selectionValue in formField.SelectionValues)
                                        {
                                            var lng = selectionValue.Text.GetLng();
                                            <MudRadio Option="@(lng.Value)">@lng.Value </MudRadio>
                                        }
                                    </MudRadioGroup>
                                    break;
                                case (ControlType.Textarea):
                                    <MudTextField class="control-textarea" Placeholder=@L["newreport_placeholder_text"] Label="" Variant="Variant.Outlined" Lines="8" @bind-Value="@formField.SelectedValues[0]" Required="@formField.Mandatory" RequiredError="@L["newreport_required_error"]"/>
                                    break;
                                case (ControlType.Textbox):
                                    <MudTextField Placeholder=@L["newreport_placeholder_text"] @bind-Value="@formField.SelectedValues[0]" Label="" Variant="Variant.Outlined" Required="@formField.Mandatory" RequiredError="@L["newreport_required_error"]"></MudTextField>
                                    break;
                                case (ControlType.Checkbox):
                                   @*<div class="control-title">@formField.Texts[0].Text</div>
                                    @if (formField.SelectionValues != null)
                                    {
                                        @foreach (SelectionValueDto selectionValue in formField.SelectionValues)
                                        {
                                            <MudCheckBox @bind-Checked="@formField.SelectedValues" Label="@selectionValue.Text[0].Text"></MudCheckBox>
                                        }
                                    }*@
                                    break;
                                default:
                                    Console.WriteLine("Form field is not implemented");
                                    break;
                            }
                        </div>
                    }
                }
            </MudForm>
        }
    </div>
    <div class="footer">
        <div>
            <MudButton Color="Color.Dark" Variant="Variant.Filled" OnClick="@(async () => await Submit())">@L["newreport_continue"]</MudButton>
        </div>
    </div>
</div>